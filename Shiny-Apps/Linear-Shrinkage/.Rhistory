n_bootstraps = 10,
verbose = FALSE
)
did2s_m
es_twfe = event_study(
data = sample_aggregated_dataset_3y, yname = "y", idname = "ID",
tname = "year", gname = "year_treat", estimator = "TWFE")
View(es_twfe)
plot_event_study(es_twfe, horizon = -4:4)
?plot_event_study
plot_event_study(es_twfe, horizon = c(-4, 4))
plot_event_study(es_twfe, horizon = c(-4, 4))
es_sunab = event_study(
data = sample_aggregated_dataset_3y, yname = "y", idname = "ID",
tname = "year", gname = "year_treat", estimator = "sunab")
plot_event_study(es_sunab, horizon = c(-4, 4))
plot_event_study(es_sunab, horizon = c(-3, 2))
plot_event_study(es_sunab, horizon = c(-3, 3))
plot_event_study(es_sunab, horizon = c(-2, 3))
plot_event_study(es_sunab, horizon = c(-3, 3))
es_did2s = broom::tidy(did2s_m)
sample_aggregated_dataset_3y = sample_aggregated_dataset_3y %>%
mutate(
rel_year = ifelse(year_treat == 0, -Inf, year - year_treat)
)
sample_aggregated_dataset_3y
View(sample_aggregated_dataset_3y)
first_stage <- feols(
y ~ 0 | ID + year,
sample_aggregated_dataset_3y |> filter(treatment == FALSE)
)
sample_aggregated_dataset_3y$y_0_hat = predict(first_stage, newdata = sample_aggregated_dataset_3y)
sample_aggregated_dataset_3y$y_resid =
sample_aggregated_dataset_3y$y- sample_aggregated_dataset_3y$y_0_hat
second_stage <- feols(
y_resid ~ i(rel_year, ref = -Inf),
sample_aggregated_dataset_3y
)
summary(second_stage)
did2s_m = did2s(
data = sample_aggregated_dataset_3y,
yname = "y",
treatment = "treatment",
first_stage = ~ 0 | ID + year,
second_stage = ~ i(rel_year, ref = -Inf),
cluster_var = "ID",
bootstrap = TRUE,
n_bootstraps = 10,
verbose = FALSE
)
summary(did2s_m)
out = event_study(
data = did2s::df_het, yname = "dep_var", idname = "unit",
tname = "year", gname = "g", estimator = "all"
)
plot_event_study(out)
es_did2s$estimator = "Gardner (2021)"
# Manually creating `es_did2s`
es_did2s = broom::tidy(did2s_m)
es_twfe
es_did2s$estimator = "Gardner (2021)"
es_did2s$term = stringr::str_replace(es_did2s$term, "rel_year::", "") |>
as.numeric()
plot_event_study(es_did2s)
es_twfe = event_study(
data = sample_aggregated_dataset_3y, yname = "y", idname = "ID",
tname = "year", gname = "year_treat", estimator = "TWFE"
)
es = bind_rows(es_twfe, es_did2s, es_sunab)
plot_event_study(es, horizon = c(-3, 2))
plot_event_study(es, horizon = c(-3, 3))
plot_event_study(es, horizon = c(-4, 3))
plot_event_study(es_did2s)
library(did2s)
remove.packages("did2s")
library(did2s)
event_study
devtools::install_github("kylebutts/did2s")
es_twfe = event_study(
data = sample_aggregated_dataset_3y, yname = "y", idname = "ID",
tname = "year", gname = "year_treat", estimator = "TWFE"
)
View(es_twfe)
library(did2s)
did2s::event
did2s::event_study
detach("package:did2s", unload = TRUE)
remove.packages("did2s")
devtools::install_github("kylebutts/did2s")
library(did2s)
event_study
es_twfe = event_study(
data = sample_aggregated_dataset_3y, yname = "y", idname = "ID",
tname = "year", gname = "year_treat", estimator = "TWFE"
)
View(es_twfe)
es = bind_rows(es_twfe, es_did2s, es_sunab)
plot_event_study(es, horizon = c(-3, 3))
source("~/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/5476ED3C-E723-4C99-9F0A-322E77692BE4/prova.R")
Y = matrix(2:7, nrow = 3, ncol = 2)
Y
Y = matrix(2:7, byrow = T, ncol = 2)
Y
m = matrix(c(1,0,1,0,1,0), byrow = TRUE, ncol = 2)
m
m = matrix(c(1,0,0,1,1,0), byrow = TRUE, ncol = 2)
m[which(m == 0)] = NA
m
Y * m
reprex::reprex()
styler:::style_active_file()
event_study(
yname = "theftper100K", gname = "yeareffective", idname = "fips_state_code", tname = "year", xformla = NULL, data = sampledata,
estimator = "TWFE"
) |>
plot_event_study(separate = FALSE, horizon = c(-3, 3))
library(data.table)
library(did2s)
event_study(
yname = "theftper100K", gname = "yeareffective", idname = "fips_state_code", tname = "year", xformla = NULL, data = sampledata,
estimator = "TWFE"
) |>
plot_event_study(separate = FALSE, horizon = c(-3, 3))
sampledata
sampledata$yeareffective
sampledata$yeareffective |> table()
table(sampledata$yeareffective)
sum(is.na((sampledata$yeareffective)))
sampledata[is.na(sampledata$yeareffective), "yeareffective"] = 0
event_study(
yname = "theftper100K", gname = "yeareffective", idname = "fips_state_code", tname = "year", xformla = NULL, data = sampledata,
estimator = "TWFE"
) |>
plot_event_study(separate = FALSE, horizon = c(-3, 3))
sampledata
table(sampledata$year)()
table(sampledata$year)
sampledata[sampledata$yeareffective == 2020, "yeareffective"] = 0
sampledata[sampledata$yeareffective == 2020, "yeareffective"] = 0
sampledata[is.na(sampledata$yeareffective), "yeareffective"] = 0
event_study(
yname = "theftper100K", gname = "yeareffective", idname = "fips_state_code", tname = "year", xformla = NULL, data = sampledata,
estimator = "TWFE"
) |>
plot_event_study(separate = FALSE, horizon = c(-3, 3))
event_study(
yname = "theftper100K", gname = "yeareffective", idname = "fips_state_code", tname = "year", xformla = NULL, data = sampledata,
estimator = "all"
) |>
plot_event_study(separate = FALSE, horizon = c(-3, 3))
sampledata = as.data.table(sampledata)
sampledata[, fips_state_code]
sampledata[, fips_state_code := as.numeric(fips_state_code)]
event_study(
yname = "theftper100K", gname = "yeareffective", idname = "fips_state_code", tname = "year", xformla = NULL, data = sampledata,
estimator = "all"
) |>
plot_event_study(separate = FALSE, horizon = c(-3, 3))
library(data.table)
library(did2s)
df <- haven::read_dta("~/Downloads/badegree_prek_analytic.dta")
str(df)
df$a_medlog |> str()
did2s(
df, yname = "a_median_log",
first_stage = ~ 0 | state + year,
second_stage = ~ i(rel_year_shift),
treatment = "treat",
cluster_var = "state"
)
did2s(
df, yname = "a_median_log",
first_stage = ~ 0 | state + year,
second_stage = ~ i(rel_year_shift, ref = 100),
treatment = "treat",
cluster_var = "state"
) |> iplot()
did2s(
df, yname = "a_median_log",
first_stage = ~ 0 | state + year,
second_stage = ~ i(rel_year_shift, ref = 100),
treatment = "treat",
cluster_var = "state"
) |> coefplot()
setDT(df)
df$occ_title
did2s(
df[occ_title == "prek", ], yname = "a_median_log",
first_stage = ~ 0 | state + year,
second_stage = ~ i(rel_year_shift, ref = 100),
treatment = "treat",
cluster_var = "state"
) |>
coefplot()
df$rel_year
did2s(
df[occ_title == "prek", ], yname = "a_median_log",
first_stage = ~ 0 | state + year,
second_stage = ~ i(rel_year, ref = 100),
treatment = "treat",
cluster_var = "state"
) |>
coefplot()
did2s(
df[occ_title == "prek", ], yname = "a_median_log",
first_stage = ~ 0 | state + year,
second_stage = ~ i(rel_year),
treatment = "treat",
cluster_var = "state"
) |>
coefplot()
df$rel_year |> table()
df$rel_year
did2s(
df[occ_title == "prek", ], yname = "a_median_log",
first_stage = ~ 0 | state + year,
second_stage = ~ i(rel_year),
treatment = "treat",
cluster_var = "state"
) |>
coefplot()
did2s(
df[occ_title == "prek", ], yname = "a_median_log",
first_stage = ~ 0 | state + year,
second_stage = ~ i(rel_year),
treatment = "treat",
cluster_var = "state"
)
df[is.na(rel_year), ]
source("~/Downloads/hannah.R", echo=TRUE)
df[is.na(rel_year), g]
df[is.na(rel_year), rel_year := -Inf]
did2s(
df[occ_title == "prek", ], yname = "a_median_log",
first_stage = ~ 0 | state + year,
second_stage = ~ i(rel_year, ref = -Inf),
treatment = "treat",
cluster_var = "state"
) |>
coefplot()
df$occ_title
did2s(
df[occ_title == "ece", ], yname = "a_median_log",
first_stage = ~ 0 | state + year,
second_stage = ~ i(rel_year, ref = -Inf),
treatment = "treat",
cluster_var = "state"
) |>
coefplot()
did2s(
df[occ_title == "kindergraten", ], yname = "a_median_log",
first_stage = ~ 0 | state + year,
second_stage = ~ i(rel_year, ref = -Inf),
treatment = "treat",
cluster_var = "state"
) |>
coefplot()
df$occ_title
did2s(
df[occ_title == "kindergarten", ], yname = "a_median_log",
first_stage = ~ 0 | state + year,
second_stage = ~ i(rel_year, ref = -Inf),
treatment = "treat",
cluster_var = "state"
) |>
coefplot()
did2s(
df[occ_title == "ece", ], yname = "a_median_log",
first_stage = ~ 0 | state + year,
second_stage = ~ i(rel_year, ref = -Inf),
treatment = "treat",
cluster_var = "state"
) |>
coefplot()
did2s(
df[occ_title == "prek", ], yname = "a_median_log",
first_stage = ~ 0 | state + year,
second_stage = ~ i(rel_year, ref = -Inf),
treatment = "treat",
cluster_var = "state"
) |>
coefplot()
table(df$rel_year)
table(df$state)
df[occ_title == "kindergarten", table(rel_year)]
library(gmailr)
install.packages("gmailr")
library(gmailr)
gm_auth_configure()
?gm_auth_configure()
gm_auth()
?gm_auth_configure()
gm_auth_configure(path = "~/Desktop/client_secret_178732305019.json")
gm_oauth_app()
gm_mime() %>%
gm_to("kyle.butts@colorado.edu") %>%
gm_from("buttskyle96@gmail.com") %>%
gm_text_body("Testing programmatic email")
email <- gm_mime() %>%
gm_to("kyle.butts@colorado.edu") %>%
gm_from("buttskyle96@gmail.com") %>%
gm_text_body("Testing programmatic email")
strwrap(as.character(text_msg))
text_msg <- gm_mime() %>%
gm_to("kyle.butts@colorado.edu") %>%
gm_from("buttskyle96@gmail.com") %>%
gm_text_body("Testing programmatic email")
strwrap(as.character(text_msg))
gm_send_message(file_attachment)
gm_send_message(text_msg)
gm_send_message(text_msg)
gm_send_message(text_msg)
gm_send_message(text_msg)
gm_send_message(text_msg)
library(gargle)
?gargle
library(gargle)
token <- token_fetch()
token
gm_auth()
gm_deauth()
gm_auth()
text_msg <- gm_mime() |>
gm_to("buttskyle96@gmail.com") |>
gm_from("buttskyle96@gmail.com") |>
gm_text_body("Gmailr is a very handy package!")
text_msg
text_msg |> as.character()
text_msg |> as.character() |> cat()
str(text_msg)
gm_send_message(text_msg)
gm_deauth()
gm_send_message(text_msg)
library(gargle)
library(gmailr)
library(data.table)
library(stringr)
gm_auth_configure(path = "~/Desktop/client_secret_1049324731910.json")
attendees <- fread("~/Desktop/synth_orders.csv")
attendees = attendees[, .(
name = paste(`First Name`, `Last Name`) |> str_to_title(),
email = `Email Address`
)]
View(attendees)
library(gargle)
library(gmailr)
library(data.table)
library(stringr)
gm_auth_configure(path = "~/Desktop/client_secret_1049324731910.json")
attendees <- fread("~/Desktop/synth_orders.csv")
attendees = attendees[, .(
name = paste(`First Name`, `Last Name`) |> str_to_title(),
email = `Email Address`
)]
for (i in 191:nrow(attendees)) {
name  = attendees[i, name]
email = attendees[i, email]
try({
# Render certificate and send email
rmarkdown::render(
"/Users/kylebutts/Documents/Mixtape-Sessions/Mixtape-Documents/Certificate-of-Completion.Rmd",
params = list(
name = name,
course = "Synthetic Control and Clustering with Alberto Abadie",
date = "April 27th"
)
)
kfbmisc::print_rmd(
"~/Documents/Mixtape-Sessions/Mixtape-Documents/Certificate-of-Completion.html",
"~/Desktop/Certificate-of-Completion.pdf"
)
msg <- r'(Hi,
Thank you for attending our Mixtape Sessions workshop. We've attached a certificate of completion for your records.
We are looking for your feedback on the course so we can improve in future iterations. If you could please complete this 2 minute survey, it will be very much appreciated: https://docs.google.com/forms/d/e/1FAIpQLSd3lwGN7-_9nos1vV-r-w21i0WNGZm534afuIACutMU_4lMWA/viewform?usp=sf_link
Warmly,
-- Mixtape Sessions
)'
text_msg <- gm_mime() |>
gm_to(email) |>
gm_from("buttskyle96@gmail.com") |>
gm_subject("Certificate of Completion") |>
gm_text_body(msg) |>
gm_attach_file(filename = "~/Desktop/Certificate-of-Completion.pdf")
gm_send_message(text_msg)
})
}
i
for (i in 270:nrow(attendees)) {
name  = attendees[i, name]
email = attendees[i, email]
try({
# Render certificate and send email
rmarkdown::render(
"/Users/kylebutts/Documents/Mixtape-Sessions/Mixtape-Documents/Certificate-of-Completion.Rmd",
params = list(
name = name,
course = "Synthetic Control and Clustering with Alberto Abadie",
date = "April 27th"
)
)
kfbmisc::print_rmd(
"~/Documents/Mixtape-Sessions/Mixtape-Documents/Certificate-of-Completion.html",
"~/Desktop/Certificate-of-Completion.pdf"
)
msg <- r'(Hi,
Thank you for attending our Mixtape Sessions workshop. We've attached a certificate of completion for your records.
We are looking for your feedback on the course so we can improve in future iterations. If you could please complete this 2 minute survey, it will be very much appreciated: https://docs.google.com/forms/d/e/1FAIpQLSd3lwGN7-_9nos1vV-r-w21i0WNGZm534afuIACutMU_4lMWA/viewform?usp=sf_link
Warmly,
-- Mixtape Sessions
)'
text_msg <- gm_mime() |>
gm_to(email) |>
gm_from("buttskyle96@gmail.com") |>
gm_subject("Certificate of Completion") |>
gm_text_body(msg) |>
gm_attach_file(filename = "~/Desktop/Certificate-of-Completion.pdf")
gm_send_message(text_msg)
})
}
View(attendees)
library(fixest)
est = feols(wt ~ i(vs, gear) + hp + poly(hp, 2) | cyl, mtcars)
est = feols(wt ~ i(vs, gear) + hp + poly(hp, 2) | cyl, mtcars)
model.matrix(est)
model.matrix(est, type = "lhs")
est = feols(c(mpg, wt) ~ i(vs, gear) + hp + poly(hp, 2) | cyl, mtcars)
est
model.matrix(est, type = "lhs")
library(fixest)
data(base_did)
pdat = panel(base_did, ~ id + period)
est1 = fixest::feols(y ~ l(x1, 0:1), pdat)
est1
gm_auth()
gmailr::gm_auth()
library(gargle)
library(gmailr)
library(data.table)
library(stringr)
gm_auth_configure(path = "~/Desktop/rdd/client_secret.json")
gm_auth()
library(gargle)
library(gmailr)
library(data.table)
library(stringr)
gm_auth_configure(path = "~/Desktop/rdd/client_secret.json")
attendees <- fread("~/Desktop/rdd/orders.csv")
attendees = attendees[, .(
firstname = str_to_title(`First Name`),
name = paste(`First Name`, `Last Name`) |> str_to_title(),
email = `Email Address`
)]
# certificates = list.files("~/Desktop/rdd/", pattern = "Certificate-of-Completion.pdf")
# completed_names = certificates |>
#   stringr::str_extract(
#     "(.*?)-Certificate-of-Completion.pdf",
#     group = 1
#   ) |>
#   stringr::str_replace_all("-", " ")
# attendees = attendees[!(name %in% completed_names), ]
# # Create documents
# for (i in 1:nrow(attendees)) {
#   name  = attendees[i, name]
#   email = attendees[i, email]
#   name_hyphenated = name |> str_squish() |> str_replace_all(" ", "-")
#   outfile = paste0(
#     "~/Desktop/rdd/", name_hyphenated, "-Certificate-of-Completion.pdf"
#   )
#   try({
#     # Render certificate and send email
#     rmarkdown::render(
#       "/Users/kylebutts/Documents/Mixtape-Sessions/Mixtape-Documents/Certificate-of-Completion.Rmd",
#       params = list(
#         name = name,
#         course = "Regression Discontinuity Design with Rocío Titiunik",
#         date = "May 17th"
#       )
#     )
#     kfbmisc::print_rmd(
#       "~/Documents/Mixtape-Sessions/Mixtape-Documents/Certificate-of-Completion.html",
#       outfile
#     )
#   })
# }
for (i in 1:nrow(attendees)) {
name  = attendees[i, name]
email = attendees[i, email]
name_hyphenated = name |> str_squish() |> str_replace_all(" ", "-")
outfile = paste0(
"~/Desktop/rdd/", name_hyphenated, "-Certificate-of-Completion.pdf"
)
msg <- r'(Hi,
Thank you for attending our Mixtape Sessions workshop. We've attached a certificate of completion for your records.
The video recording is available here:
Day 1: https://vimeo.com/828147243
Day 2: https://vimeo.com/828201129
Day 3: https://vimeo.com/828594450
Password: RDD_2023
Please do not share the recording with anyone.
We are looking for your feedback on the course so we can improve in future iterations. If you could please complete this 2 minute survey, it will be very much appreciated: https://docs.google.com/forms/d/e/1FAIpQLSeIhjjy3qo1j1MkHswieM9WH7mHB4CuJoQHmJn8Uud079WJpg/viewform?usp=sf_link
Warmly,
-- Mixtape Sessions
)'
text_msg <- gm_mime() |>
gm_to(email) |>
gm_from("buttskyle96@gmail.com") |>
gm_subject("Video Recordings and Certificate of Completion") |>
gm_text_body(msg) |>
gm_attach_file(filename = outfile)
gm_send_message(text_msg)
}
setwd("~/Documents/Mixtape-Sessions/Empirical-Bayes/Shiny-Apps/Linear-Shrinkage")
